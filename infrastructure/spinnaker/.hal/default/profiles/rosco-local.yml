server:
  port: 8087

rosco:
  configDir: /opt/rosco/config/packer
  jobs:
    local:
      timeoutMinutes: 30

spectator:
  applicationName: ${spring.application.name}
  webEndpoint:
    enabled: false

packer:
  # Set this if running Packer >= 1.4.0 for timestamp prepended output
  timestamp: true
  # Add additional parameters that will always be passed to "packer build" here
  # additionalParameters:
  # - on-error=abort
  # - -var "bakedBy=Rosco"

# If a repository is set here, it will be added by packer as repository when baking images for GCE and AWS.
# It is safe to leave this out (or blank) if you do not need to configure your own repository.
# You can specify an apt repository (used when baking debian based images) and/or a yum repository (used when baking an
# rpm based imaged) and/or a chocolatey repository (used when baking a nuget based image).
# You may specify a space separated list repositories per repository type.
# The following commented-out lines are an example of what a valid entry looks like.
# debianRepository: http://dl.bintray.com/spinnaker/ospackages trusty main;http://other.repo.com/repo/packages trusty main
# yumRepository:
# chocolateyRepository: https://chocolatey.org/api/v2/
# This general repository can be override at BaseImage level using customRepository entry

defaultCloudProviderType: aws

# When the bakery is configured to use a templateFile in this list,
# /usr/bin/packer will be run as root using 'sudo'.
# By default, spinnaker does not have sudo permissions so these scripts will
# fail.
# In order to give sudo permissions, create and add the following line (without
# leading '#') to /etc/sudoers.d/spinnaker
# spinnaker ALL=(ALL) NOPASSWD: /usr/bin/packer
#
# WARNING: Giving sudo access for spinnaker to execute packer may create an
# opportunity for malicious actors to take control of your machine and data it
# has access to.

templatesNeedingRoot: aws-multi-chroot-custom.json

aws:
  # The property referenced below, AWS_ENABLED, is not set in the
  # 'unified config' supported by the spinnaker/spinnaker project. If you
  # copy/paste this section into a new rosco-local.yml file for use with a
  # pre-built Spinnaker image, make sure to either replace AWS_ENABLED
  # with SPINNAKER_AWS_ENABLED or to explicitly set the property's value
  # to true.
  enabled: true
  bakeryDefaults:
    awsAssociatePublicIpAddress: true
    # To make use of share_with and copy_to, replace this template with aws-multi-ebs.json.
    # When using aws-multi-ebs.json or aws-multi-chroot.json make sure to set the SPINNAKER_AWS_DEFAULT_ACCOUNT env
    # variable to the account ID of the AWS account the Spinnaker instance is launched in.
    templateFile: aws-ebs.json
    defaultVirtualizationType: hvm
    baseImages:
      # AMIs sourced from: https://cloud-images.ubuntu.com/locator/ec2/
      # Images should be considered placeholders.

      # Packer Spot Pricing #
      #   spotPrice specifies the maximum hourly price to pay for a spot instance to create the AMI.
      #     This can be set to 'auto' to automatically discover the best spot price.
      #     Set to "0" to use an on demand instance (default).
      #   spotPriceAutoProduct is required if spotPrice is set to 'auto'.
      #     This specifies what sort of AMI you're launching to find the best spot price.
      #     This must be one of:
      #        Linux/UNIX
      #        Linux/UNIX (Amazon VPC)
      #        SUSE Linux
      #        SUSE Linux (Amazon VPC)
      #        Windows
      #        Windows (Amazon VPC)

      - baseImage:
          id: amazon-linux2-golden-ami
          shortDescription: Base Spring Petclinic AMI
          detailedDescription: Base Spring Petclinic AMI based on Amazon Linux 2 AMI (HVM), SSD Volume Type
          packageType: rpm
          # You can specify the templateFile used for this baseImage.
          # If not specified, the default templateFile will be used.
          templateFile: aws-ebs.json
          # You can specify a different repository for this baseImage.
          # customRepository: http://dl.bintray.com/spinnaker/ospackages bionic main
        virtualizationSettings:
          - region: us-east-1
            virtualizationType: hvm
            instanceType: t2.micro
            sourceAmi: ami-0b01278c15bf0916d
            sshUserName: ec2-user
            spotPrice: 0
            spotPriceAutoProduct: Linux/UNIX (Amazon VPC)

swagger:
  enabled: true
  title: Spinnaker Rosco API
  description:
  contact:
  patterns:
    - /api/v1.*
    - /bakeOptions.*
    - /status.*