spectator:
  applicationName: ${spring.application.name}
  webEndpoint:
    enabled: false

global.spinnaker.timezone: America/Los_Angeles
spinnaker.baseUrl: http://${SPINNAKER_PUBLIC_IP}:9000
slack:
  enabled: false
  token:
twilio:
  enabled: false
  baseUrl: https://api.twilio.com/
github-status:
  enabled: false

pubsub:
  enabled: false
  google:
    enabled: false
    pubsubType: GOOGLE
    subscriptions: []
    publishers: []

artifacts:
  bitbucket:
    enabled: false
    accounts: []
  gcs:
    enabled: false
    accounts: []
  oracle:
    enabled: false
    accounts: []
  github:
    enabled: false
    accounts: []
  gitlab:
    enabled: false
    accounts: []
  gitrepo:
    enabled: false
    accounts: []
  http:
    enabled: false
    accounts: []
  helm:
    enabled: false
    accounts: []
  s3:
    enabled: false
    accounts: []
  maven:
    enabled: false
    accounts: []
  templates: []

gcb:
  enabled: false
  accounts: []

telemetry:
  enabled: false
  endpoint: https://stats.spinnaker.io
  instanceId: 01DZZ19MVFQGEJ6DYRNTQPDYXR
  spinnakerVersion: 1.18.2
  connectionTimeoutMillis: 3000
  readTimeoutMillis: 5000

# halconfig

server:
  port: ${services.echo.port:8089}
  address: ${services.echo.host:localhost}

spinnaker:
  baseUrl: ${services.deck.baseUrl}
  inMemory:
    enabled: true

front50:
  enabled: ${services.front50.enabled:false}
  baseUrl: ${services.front50.baseUrl:http://localhost:8080}

igor:
  enabled: ${services.igor.enabled:false}
  baseUrl: ${services.igor.baseUrl:http://localhost:8088}

orca:
  enabled: ${services.orca.enabled:false}
  baseUrl: ${services.orca.baseUrl:http://localhost:8083}

scheduler:
  enabled: ${services.echo.cron.enabled:true}
  threadPoolSize: 20
  triggeringEnabled: true
  pipelineConfigsPoller:
    enabled: true
    pollingIntervalMs: 30000
  cron:
    timezone: ${global.spinnaker.timezone:America/Los_Angeles}

redis:
  connection: ${services.redis.baseUrl:redis://localhost:6379}
  enabled: ${services.redis.enabled:false}

resilience4j.circuitbreaker:
  instances:
    telemetry:
      # This needs to stay false, because if the telemetry endpoint goes down, Echo goes unhealthy (no good!)
      registerHealthIndicator: false
      # Warming up...
      minimumNumberOfCalls: 5
      slidingWindowSize: 10
      slidingWindowType: COUNT_BASED
      # When tripped...
      waitDurationInOpenState: 12h
      # Try to get back to a working state...
      permittedNumberOfCallsInHalfOpenState: 1